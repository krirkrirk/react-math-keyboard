// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../react

declare module 'react-math-keyboard' {
    import "./style.css";
    import { MathInput } from "react-math-keyboard/mathInput/mathInput";
    export default MathInput;
}

declare module 'react-math-keyboard/mathInput/mathInput' {
    import React from "react";
    import { MathField } from "react-math-keyboard/types/types";
    import { KeyId } from "react-math-keyboard/keyboard/keys/keys";
    import { KeyProps } from "react-math-keyboard/keyboard/keys/key";
    import { ToolbarTabIds } from "react-math-keyboard/keyboard/toolbar/toolbarTabs";
    type Props = {
        numericToolbarKeys?: (KeyId | KeyProps)[];
        numericToolbarTabs?: ToolbarTabIds[];
        alphabeticToolbarKeys?: (KeyId | KeyProps)[];
        setMathfieldRef?: (mf: MathField) => void;
        setValue?: (s: string) => void;
        style?: React.CSSProperties;
        size?: "small" | "medium";
    };
    export const MathInput: ({ numericToolbarKeys, numericToolbarTabs, alphabeticToolbarKeys, setValue, setMathfieldRef, style, size, }: Props) => JSX.Element;
    export {};
}

declare module 'react-math-keyboard/types/types' {
    export interface MathFieldConfig {
        typingAsteriskWritesTimesSymbol?: boolean;
        spaceBehavesLikeTab?: boolean;
        leftRightIntoCmdGoes?: "up" | "down";
        restrictMismatchedBrackets?: boolean;
        sumStartsWithNEquals?: boolean;
        supSubsRequireOperand?: boolean;
        charsThatBreakOutOfSupSub?: string;
        autoSubscriptNumerals?: boolean;
        autoCommands?: string;
        autoOperatorNames?: string;
        substituteTextarea?: () => void;
        handlers?: {
            deleteOutOf?: (direction: Direction, mathField: MathField) => void;
            moveOutOf?: (direction: Direction, mathField: MathField) => void;
            selectOutOf?: (direction: Direction, mathField: MathField) => void;
            downOutOf?: (mathField: MathField) => void;
            upOutOf?: (mathField: MathField) => void;
            edit?: (mathField: MathField) => void;
            enter?: (mathField: MathField) => void;
        };
        maxDepth?: number;
    }
    export enum Direction {
        R = 0,
        L = 1
    }
    export interface MathField {
        revert(): void;
        reflow(): void;
        el(): HTMLElement;
        latex(): string;
        latex(latexString: string): void;
        text(): string;
        focus(): void;
        blur(): void;
        write(latex: string): void;
        cmd(latexString: string): void;
        select(): void;
        clearSelection(): void;
        moveToLeftEnd(): void;
        moveToRightEnd(): void;
        keystroke(keys: string): void;
        typedText(text: string): void;
        config(newConfig: MathFieldConfig): void;
    }
    export interface MathfieldInstructions {
        method: "write" | "cmd" | "keystroke" | "typedText";
        content: string;
    }
}

declare module 'react-math-keyboard/keyboard/keys/keys' {
    import { KeyProps } from "react-math-keyboard/keyboard/keys/key";
    export type KeyId = string;
    export const KeysPropsMap: Map<string, KeyProps>;
}

declare module 'react-math-keyboard/keyboard/keys/key' {
    import { ReactNode } from "react";
    import { MathfieldInstructions } from "react-math-keyboard/types/types";
    export enum KeyCategory {
        "number" = 0,
        "constant" = 1,
        "utility" = 2,
        "operator" = 3,
        "function" = 4,
        "text" = 5,
        "letter" = 6
    }
    export type KeyProps = {
        id: string;
        label: string | ReactNode;
        labelType: "raw" | "tex" | "svg";
        keyCategory: KeyCategory;
        mathfieldInstructions?: MathfieldInstructions;
        onClick?: () => void;
        fullWidth?: boolean;
    };
    export const Key: ({ id, label, labelType, keyCategory, onClick, mathfieldInstructions, fullWidth, }: KeyProps) => JSX.Element;
}

declare module 'react-math-keyboard/keyboard/toolbar/toolbarTabs' {
    import { KeyProps } from "react-math-keyboard/keyboard/keys/key";
    import { KeyId } from "react-math-keyboard/keyboard/keys/keys";
    export type ToolbarTab = {
        id: ToolbarTabIds;
        label: string;
        rawLabel: string;
        keys: (KeyId | KeyProps)[];
    };
    export type ToolbarTabIds = "trigo" | "greek" | "sets" | "sequences" | "functions" | "polynomial";
    export const toolbarTabs: ToolbarTab[];
    export const defaultTabs: ToolbarTabIds[];
}

